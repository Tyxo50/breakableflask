name: ZAP Baseline Scan

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  zap_baseline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"  # adapte selon ton projet

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start application
        run: |
          python main.py &
          echo "Attente que l'application soit prête..."
          for i in {1..30}; do
            if curl -s http://localhost:4000 > /dev/null; then
              echo "L'application est en ligne"
              break
            else
              echo "En attente..."
              sleep 2
            fi
          done

      - name: Run ZAP Baseline
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: "http://localhost:4000"
          token: ${{ secrets.GITHUB_TOKEN }}
          # options facultatives :
          # rules_file_name: ".zap/rules.tsv"
          # cmd_options: "-a"
          # fail_action: true
          # docker_name: "ghcr.io/zaproxy/zaproxy:stable"
          continue-on-error: true

      # (Optionnel) Si tu veux récupérer le rapport comme artefact
      - name: Upload ZAP reports
        uses: actions/upload-artifact@v4
        with:
          name: zap_scan_reports
          path: |
            **/zap_report.html
            **/zap_report.json
            **/zap_report.md
